{"version":3,"file":"component---src-pages-gatsby-guide-tsx-b3e7cb6010c21879c3fc.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/seo.tsx","webpack://gatsby-starter-default/./src/pages/gatsby-guide.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ntype SeoType = {\n  description?: string;\n  title: string;\n  children?: React.ReactNode;\n}\n\nconst Seo = ({ description, title, children } : SeoType) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n};\n\nexport default Seo;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport '../styles/index.css';\n\nimport Seo from '../components/seo';\n\nconst links = [\n  {\n    text: 'Tutorial',\n    url: 'https://www.gatsbyjs.com/docs/tutorial',\n    description:\n            'A great place to get started if you\\'re new to web development. Designed to guide you through setting up your first Gatsby site.',\n  },\n  {\n    text: 'Examples',\n    url: 'https://github.com/gatsbyjs/gatsby/tree/master/examples',\n    description:\n            'A collection of websites ranging from very basic to complex/complete that illustrate how to accomplish specific tasks within your Gatsby sites.',\n  },\n  {\n    text: 'Plugin Library',\n    url: 'https://www.gatsbyjs.com/plugins',\n    description:\n            'Learn how to add functionality and customize your Gatsby site or app with thousands of plugins built by our amazing developer community.',\n  },\n  {\n    text: 'Build and Host',\n    url: 'https://www.gatsbyjs.com/cloud',\n    description:\n            'Now you’re ready to show the world! Give your Gatsby site superpowers: Build and host on Gatsby Cloud. Get started for free!',\n  },\n];\n\nconst samplePageLinks = [\n  {\n    text: 'Page 2',\n    url: 'page-2',\n    badge: false,\n    description:\n            'A simple example of linking to another page within a Gatsby site',\n  },\n  { text: 'TypeScript', url: 'using-typescript' },\n  { text: 'Server Side Rendering', url: 'using-ssr' },\n  { text: 'Deferred Static Generation', url: 'using-dsg' },\n];\n\nconst moreLinks = [\n  { text: 'Join us on Discord', url: 'https://gatsby.dev/discord' },\n  {\n    text: 'Documentation',\n    url: 'https://gatsbyjs.com/docs/',\n  },\n  {\n    text: 'Starters',\n    url: 'https://gatsbyjs.com/starters/',\n  },\n  {\n    text: 'Showcase',\n    url: 'https://gatsbyjs.com/showcase/',\n  },\n  {\n    text: 'Contributing',\n    url: 'https://www.gatsbyjs.com/contributing/',\n  },\n  { text: 'Issues', url: 'https://github.com/gatsbyjs/gatsby/issues' },\n];\n\nconst utmParameters = '?utm_source=starter&utm_medium=start-page&utm_campaign=default-starter';\n\nconst GatsbyGuide = () => (\n  <div>\n    <div className=\"textCenter\">\n      <p className=\"intro\">\n        <b>Example pages:</b>\n        {' '}\n        {samplePageLinks.map((link, i) => (\n          <React.Fragment key={link.url}>\n            <Link to={link.url}>{link.text}</Link>\n            {i !== samplePageLinks.length - 1 && <> · </>}\n          </React.Fragment>\n        ))}\n        <br />\n        Edit\n        {' '}\n        <code>src/pages/index.js</code>\n        {' '}\n        to update this page.\n      </p>\n    </div>\n    <ul className=\"list\">\n      {links.map((link) => (\n        <li key={link.url} className=\"listItem\">\n          <a\n            className=\"listItemLink\"\n            href={`${link.url}${utmParameters}`}\n          >\n            {link.text}\n            {' '}\n            ↗\n          </a>\n          <p>{link.description}</p>\n        </li>\n      ))}\n    </ul>\n    {moreLinks.map((link, i) => (\n      <React.Fragment key={link.url}>\n        <a href={`${link.url}${utmParameters}`}>{link.text}</a>\n        {i !== moreLinks.length - 1 && <> · </>}\n      </React.Fragment>\n    ))}\n  </div>\n);\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"gatsby-guide\" />;\n\nexport default GatsbyGuide;\n"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","author","links","text","url","samplePageLinks","badge","moreLinks","utmParameters","Head","Seo","GatsbyGuide","className","map","link","i","key","Link","to","length","href"],"sourceRoot":""}