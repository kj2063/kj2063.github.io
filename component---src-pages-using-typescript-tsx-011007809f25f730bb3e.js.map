{"version":3,"file":"component---src-pages-using-typescript-tsx-011007809f25f730bb3e.js","mappings":"6JAiDA,IAlCYA,IAAiD,IAADC,EAAAC,EAAA,IAA/C,YAAEC,EAAW,MAAEC,EAAK,SAAEC,GAAoBL,EACrD,MAAM,KAAEM,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApBT,EAAGK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBG,MAExC,OACEO,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQD,EAAkBN,EAAK,MAAMM,EAAiBN,GACtDO,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASL,IAClCG,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAAST,IACnCO,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASL,IACzCG,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAAQ,YACjCF,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,YAClCF,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,SAA0B,QAAjBX,EAAAI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBa,SAAU,KACnEJ,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAAST,IACpCO,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASL,IACzCH,EACA,C,mGC/BP,MAiEaW,EAA0BA,IAAML,EAAAA,cAACM,EAAAA,EAAG,CAACb,MAAM,qBAExD,UAnEwDJ,IAAA,IAAC,KACvDkB,EAAI,SACJC,GACDnB,EAAA,OACCW,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAI,kBAED,IACDA,EAAAA,cAAA,SAAG,0BAELA,EAAAA,cAAA,SAAG,2CAEA,IACDA,EAAAA,cAAA,YAAM,YACL,IAAI,wCAGJ,IACDA,EAAAA,cAAA,YAAM,YACL,IAAI,mCAGJ,IACDA,EAAAA,cAAA,YAAM,oBAAuB,MAG/BA,EAAAA,cAAA,SAAG,2CAEA,IACDA,EAAAA,cAAA,YAAM,cACL,IAAI,kBAGJ,IACDA,EAAAA,cAAA,YAAM,cACL,IAAI,cAEJ,IACDA,EAAAA,cAAA,YAAM,YACL,IAAI,SAGPA,EAAAA,cAAA,SAAG,+BAEA,IACDA,EAAAA,cAAA,YAAOQ,EAASC,UACf,IAAI,qBAGJ,IACAF,EAAKZ,KAAKe,UAAU,KAGvBV,EAAAA,cAAA,SAAG,kCAEA,IACDA,EAAAA,cAAA,KAAGW,KAAK,yEAAwE,kCAE5E,KAGNX,EAAAA,cAACY,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACT,C","sources":["webpack://gatsby-starter-default/./src/components/seo.tsx","webpack://gatsby-starter-default/./src/pages/using-typescript.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ntype SeoType = {\n  description?: string;\n  title: string;\n  children?: React.ReactNode;\n}\n\nconst Seo = ({ description, title, children } : SeoType) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n};\n\nexport default Seo;\n","// If you don't want to use TypeScript you can delete this file!\nimport React from 'react';\nimport {\n  PageProps, Link, graphql, HeadFC,\n} from 'gatsby';\n\nimport Seo from '@src/components/seo';\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <div>\n    <h1>\n      Gatsby supports\n      {' '}\n      <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write\n      {' '}\n      <code>.ts/.tsx</code>\n      {' '}\n      files for\n      your pages, components, and\n      {' '}\n      <code>gatsby-*</code>\n      {' '}\n      configuration files (for\n      example\n      {' '}\n      <code>gatsby-config.ts</code>\n      ).\n    </p>\n    <p>\n      For type checking you'll want to install\n      {' '}\n      <code>typescript</code>\n      {' '}\n      via npm\n      and run\n      {' '}\n      <code>tsc --init</code>\n      {' '}\n      to create a\n      {' '}\n      <code>tsconfig</code>\n      {' '}\n      file.\n    </p>\n    <p>\n      You're currently on the page\n      {' '}\n      <code>{location.pathname}</code>\n      {' '}\n      which was\n      built on\n      {' '}\n      {data.site.buildTime}\n      .\n    </p>\n    <p>\n      To learn more, head over to our\n      {' '}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </div>\n);\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />;\n\nexport default UsingTypescript;\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`;\n"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","author","Head","Seo","data","location","pathname","buildTime","href","Link","to"],"sourceRoot":""}