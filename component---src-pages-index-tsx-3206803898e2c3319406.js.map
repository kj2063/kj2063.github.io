{"version":3,"file":"component---src-pages-index-tsx-3206803898e2c3319406.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/seo.tsx","webpack://gatsby-starter-default/./src/components/roulette.tsx","webpack://gatsby-starter-default/./src/components/news-table.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ntype SeoType = {\n  description?: string;\n  title: string;\n  children?: React.ReactNode;\n}\n\nconst Seo = ({ description, title, children } : SeoType) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n};\n\nexport default Seo;\n","import React, { useState } from 'react';\nimport '@src/styles/roulette.css';\n\nconst Roulette = () => {\n  const items = [\n    '학습 및 포스팅',\n    '코딩테스트 문제풀이',\n    '개인 프로젝트 진행',\n    '블로그 확장 개발',\n  ];\n  const itemsRepeatCnt = 5;\n  const itemHeight = 60; // 개별 아이템 높이 - css도 맞춰줘야 함\n  const [position, setPosition] = useState(0);\n  const [isSpinning, setIsSpinning] = useState(false);\n\n  let totalItems : string[] = [];\n\n  for (let i = 0; i < itemsRepeatCnt; i += 1) {\n    totalItems = totalItems.concat(items);\n  }\n\n  const spinRoulette = () => {\n    if (isSpinning) return;\n\n    /* css - transition 제거 */\n    const itemsElement : any = document.querySelector('.roulette-items');\n    if (itemsElement) {\n      itemsElement.style.transition = 'none';\n      setPosition(0);\n    }\n\n    setIsSpinning(true);\n\n    const finalIndex = (itemsRepeatCnt - 1) * items.length + Math.floor(Math.random() * items.length);\n    const finalPosition = -(finalIndex * itemHeight);\n\n    setTimeout(() => {\n      if (itemsElement) {\n        itemsElement.style.transition = 'transform 1s ease-out';\n        setPosition(finalPosition);\n      }\n\n      setIsSpinning(false);\n    }, 0);\n  };\n\n  return (\n    <div className=\"roulette-container\">\n      <div className=\"roulette-title\">\n        <h3>✏️ 오늘의 개발공부</h3>\n      </div>\n      <div className=\"roulette-content\">\n        <div className=\"roulette\">\n          <div className=\"roulette-items\" style={{ transform: `translateY(${position}px)`, transition: 'transform 1s ease-out' }}>\n            {totalItems.map((item, index) => (\n              <div key={index} className=\"roulette-item\">{item}</div>\n            ))}\n          </div>\n        </div>\n        <button type=\"button\" className=\"roulette-button\" onClick={spinRoulette} disabled={isSpinning}>\n          {isSpinning ? 'Spinning...' : 'Start'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Roulette;\n","import React, { useEffect, useState } from 'react';\nimport '@src/styles/news-table.css';\n\ntype articleType = {\n    url: string;\n    title: string;\n}\n\nconst NewsTable = () => {\n  const [articles, setArticles] = useState<articleType[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const apiKey = 'd513e6cf816442df8989483cf16d96a1'; // 발급받은 NewsAPI 키\n\n  // 날짜 계산 (현재 날짜 기준 10일 전)\n  const endDate = new Date();\n  const startDate = new Date();\n  startDate.setDate(endDate.getDate() - 10);\n\n  const startDateStr = startDate.toISOString().split('T')[0]; // yyyy-MM-dd\n  const endDateStr = endDate.toISOString().split('T')[0]; // yyyy-MM-dd\n\n  const url = `https://newsapi.org/v2/everything?sources=wired,cnn&q=artificial+intelligence+OR+AI&from=${startDateStr}&to=${endDateStr}&sortBy=popularity&pageSize=10&apiKey=${apiKey}`;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n\n        setArticles(data.articles); // 뉴스 데이터를 상태에 저장\n        setLoading(false); // 데이터 로딩 완료\n      } catch (error) {\n        setArticles([]);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []); // 빈 배열로 두어 컴포넌트가 처음 렌더링될 때만 호출\n\n  const articleRender = () => (\n    articles && articles.length > 0\n      ? articles.map((article, index) => (\n        <tr key={`news-table-tr${index}`}>\n          <td key={`news-table-td${index}`}>\n            <a href={article.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {article.title}\n            </a>\n          </td>\n        </tr>\n      ))\n      : (\n        <tr>\n          <td>최신 기사가 없습니다.</td>\n        </tr>\n      )\n  );\n\n  return (\n    <div>\n      <table key=\"news-table\" className=\"news-table\">\n        <thead>\n          <tr>\n            <th>📰 AI 관련 최신 뉴스</th>\n          </tr>\n        </thead>\n        <tbody>\n          {loading\n            ? (\n              <tr>\n                <td><b>Loading...</b></td>\n              </tr>\n            )\n            : articleRender()}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default NewsTable;\n","import * as React from 'react';\nimport Seo from '@src/components/seo';\nimport Roulette from '@src/components/roulette';\nimport NewsTable from '@src/components/news-table';\nimport '@src/styles/common.css';\nimport '@src/styles/index.css';\n\nconst IndexPage = () => (\n  <div>\n    <h2 className=\"mainColor\">\n      Home\n    </h2>\n    <div className=\"textCenter\">\n      <Roulette />\n      <br />\n      <br />\n      <NewsTable />\n    </div>\n  </div>\n);\nexport const Head = () => <Seo title=\"Home\" />;\n\nexport default IndexPage;\n"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","author","Roulette","items","position","setPosition","useState","isSpinning","setIsSpinning","totalItems","i","concat","className","style","transform","transition","map","item","index","key","type","onClick","spinRoulette","itemsElement","document","querySelector","finalPosition","length","Math","floor","random","setTimeout","disabled","NewsTable","articles","setArticles","loading","setLoading","endDate","Date","startDate","setDate","getDate","url","toISOString","split","useEffect","async","response","fetch","data","json","error","fetchData","article","href","target","rel","Head","Seo","IndexPage"],"sourceRoot":""}