{"version":3,"file":"component---src-templates-post-template-tsx-683c6e7d73c2f86203f0.js","mappings":"4JAiDA,IAlCYA,IAAiD,IAAD,QAA/C,YAAEC,EAAW,MAAEC,EAAK,SAAEC,GAAoB,EACrD,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjBE,EAAmBP,MAExC,OACEQ,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAQF,EAAkBN,EAAK,MAAMM,EAAiBN,GACtDQ,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,cAAcC,QAASN,IAClCI,EAAAA,cAAAA,OAAAA,CAAMG,SAAS,WAAWD,QAASV,IACnCQ,EAAAA,cAAAA,OAAAA,CAAMG,SAAS,iBAAiBD,QAASN,IACzCI,EAAAA,cAAAA,OAAAA,CAAMG,SAAS,UAAUD,QAAQ,YACjCF,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,eAAeC,QAAQ,YAClCF,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAR,EAAKG,oBAAY,aAAjBO,EAAmBC,SAAM,KAC/DL,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,gBAAgBC,QAASV,IACpCQ,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,sBAAsBC,QAASN,IACzCH,EACA,C,kGCrBP,MAmCaa,EAAOC,IAA6B,IAA5B,KAAEC,GAAqB,EAC1C,MAAMhB,EAAQgB,EAAKC,eAAeC,YAAYlB,MAC9C,OAAOQ,EAAAA,cAACW,EAAAA,EAAG,CAACnB,MAAOA,GAAS,EAG9B,UAxCqBF,IAAuC,IAAtC,KAAEsB,EAAI,KAAEJ,GAAyB,EACnD,MAAMK,EAAOL,EAAKC,eAElB,OACIT,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAAAA,KAAAA,CAAIc,UAAW,aAAY,QAG3Bd,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAAAA,KAAAA,CAAIc,UAAW,QAASC,MAAO,CAACC,WAAW,UAAUC,UAAU,SAAUJ,EAAKH,YAAYlB,OAC1FQ,EAAAA,cAAAA,MAAAA,CAAKkB,wBAAyB,CAAEC,OAAQN,EAAKO,SAEjDpB,EAAAA,cAACqB,EAAAA,KAAI,CACHC,GAAG,QACHR,UAAW,mBACXC,MAAO,CACHQ,SAAU,iBACVC,eAAgB,SAErBxB,EAAAA,cAAAA,IAAAA,KAAAA,4BACC,C","sources":["webpack://gatsby-starter-default/./src/components/seo.tsx","webpack://gatsby-starter-default/./src/templates/postTemplate.tsx"],"sourcesContent":["/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\nimport React from \"react\";\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\ntype SeoType = {\r\n  description?: string;\r\n  title: string;\r\n  children?: React.Component;\r\n}\r\n\r\nconst Seo = ({ description, title, children } : SeoType) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\";\r\nimport \"@src/styles/blog-templates.css\"\r\nimport Seo from \"@src/components/seo\";\r\nimport { Link } from \"gatsby\"\r\n\r\ntype PostTemplateType = {\r\n  path : string;\r\n  data : PostTemplateDataType;\r\n}\r\n\r\ntype PostTemplateFrontmatterType = {\r\n  title : string;\r\n}\r\n\r\ntype PostTemplateMarkdownRemarkType = {\r\n  frontmatter: PostTemplateFrontmatterType;\r\n  html: string;\r\n}\r\n\r\ntype PostTemplateDataType = {\r\n  markdownRemark : PostTemplateMarkdownRemarkType\r\n}\r\n\r\nconst postTemplate = ({ path, data } : PostTemplateType) => {\r\n    const blog = data.markdownRemark;\r\n\r\n    return (\r\n        <div>\r\n            <h2 className={\"mainColor\"}>\r\n                Blog\r\n            </h2>\r\n            <div>\r\n                <h1 className={\"mgl30\"} style={{fontWeight:'lighter',marginTop:'30px'}}>{blog.frontmatter.title}</h1>\r\n                <div dangerouslySetInnerHTML={{ __html: blog.html }} />\r\n            </div>\r\n            <Link\r\n              to=\"/blog\"\r\n              className={\"main_a mainColor\"}\r\n              style={{\r\n                  fontSize: `var(--font-sm)`,\r\n                  textDecoration: `none`,\r\n              }}\r\n            ><b>âž¯ to list of blog posts</b></Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Head = ({ data }: { data: any }) => {\r\n  const title = data.markdownRemark.frontmatter.title;\r\n  return <Seo title={title} />;\r\n}\r\n\r\nexport default postTemplate;"],"names":["_ref","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_site$siteMetadata","React","name","content","property","_site$siteMetadata2","author","Head","_ref2","data","markdownRemark","frontmatter","Seo","path","blog","className","style","fontWeight","marginTop","dangerouslySetInnerHTML","__html","html","Link","to","fontSize","textDecoration"],"sourceRoot":""}