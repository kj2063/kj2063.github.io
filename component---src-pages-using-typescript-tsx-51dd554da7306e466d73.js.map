{"version":3,"file":"component---src-pages-using-typescript-tsx-51dd554da7306e466d73.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" description={undefined} children={undefined} />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport ThemeContext from \"../context/ThemeContext\";\n\nconst Header = ({ siteTitle }) => (\n    <ThemeContext.Consumer>\n        {theme => (\n            <div>\n              <header\n                style={{\n                  margin: `0 auto`,\n                  padding: `var(--space-4) var(--size-gutter)`,\n                  display: `flex`,\n                  alignItems: `center`,\n                  justifyContent: `space-between`,\n                }}\n              >\n                <Link\n                  to=\"/\"\n                  className={\"main_a mainColor\"}\n                  style={{\n                    fontSize: `var(--font-md)`,\n                    textDecoration: `none`,\n                      fontWeight:'lighter',\n                      textDecorationLine:\"underline\"\n                  }}\n                >\n                    <b>{siteTitle}</b>\n                </Link>\n                {/*<img*/}\n                {/*  alt=\"Gatsby logo\"*/}\n                {/*  height={20}*/}\n                {/*  style={{ margin: 0 }}*/}\n                {/*  src=\"data:image/svg+xml,%3Csvg fill='none' viewBox='0 0 107 28' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3CclipPath id='a'%3E%3Cpath d='m0 0h106.1v28h-106.1z'/%3E%3C/clipPath%3E%3Cg clip-path='url(%23a)'%3E%3Cg fill='%23000'%3E%3Cpath clip-rule='evenodd' d='m89 11.7c-.8 0-2.2.2-3.2 1.6v-8.10005h-2.8v16.80005h2.7v-1.3c1.1 1.5 2.6 1.5999 3.2 1.5999 3 0 5-2.2999 5-5.2999s-2-5.3-4.9-5.3zm-.7 2.5c1.7 0 2.8 1.2 2.8 2.8s-1.2 2.8-2.8 2.8c-1.7 0-2.8-1.2-2.8-2.8s1.1-2.8 2.8-2.8z' fill-rule='evenodd'/%3E%3Cpath d='m71.2 21.9999v-7.6h1.9v-2.4h-1.9v-3.40005h-2.8v3.40005h-1.1v2.4h1.1v7.6z'/%3E%3Cpath clip-rule='evenodd' d='m65.6999 12h-2.9v1.3c-.8999-1.5-2.4-1.6-3.2-1.6-2.9 0-4.8999 2.4-4.8999 5.3s1.9999 5.2999 5.0999 5.2999c.8 0 2.1001-.0999 3.1001-1.5999v1.3h2.7999zm-5.1999 7.8c-1.7001 0-2.8-1.2-2.8-2.8s1.2-2.8 2.8-2.8c1.7 0 2.7999 1.2 2.7999 2.8s-1.1999 2.8-2.7999 2.8z' fill-rule='evenodd'/%3E%3Cpath d='m79.7001 14.4c-.7-.6-1.3-.7-1.6-.7-.7 0-1.1.3-1.1.8 0 .3.1.6.9.9l.7.2c.1261.0472.2621.0945.4037.1437.7571.2632 1.6751.5823 2.0963 1.2563.3.4.5 1 .5 1.7 0 .9-.3 1.8-1.1 2.5s-1.8 1.0999-3 1.0999c-2.1 0-3.2-.9999-3.9-1.6999l1.5-1.7c.6.6 1.4 1.2 2.2 1.2s1.4-.4 1.4-1.1c0-.6-.5-.9-.9-1l-.6-.2c-.0687-.0295-.1384-.0589-.2087-.0887l-.0011-.0004c-.6458-.2729-1.3496-.5704-1.8902-1.1109-.5-.5-.8-1.1-.8-1.9 0-1 .5-1.8 1-2.3.8-.6 1.8-.7 2.6-.7.7 0 1.9.1 3.2 1.1z'/%3E%3Cpath d='m98.5 20.5-4.8-8.5h3.3l3.1 5.7 2.8-5.7h3.2l-8 15.3h-3.2z'/%3E%3Cpath d='m47 13.7h7c0 .0634.01.1267.0206.1932.0227.1435.0477.3018-.0206.5068 0 4.5-3.4 8.1-8 8.1s-8-3.6-8-8.1c0-4.49995 3.6-8.09995 8-8.09995 2.6 0 5 1.2 6.5 3.3l-2.3 1.49995c-1-1.29995-2.6-2.09995-4.2-2.09995-2.9 0-4.9 2.49995-4.9 5.39995s2.1 5.3 5 5.3c2.6 0 4-1.3 4.6-3.2h-3.7z'/%3E%3C/g%3E%3Cpath d='m18 14h7c0 5.2-3.7 9.6-8.5 10.8l-13.19995-13.2c1.1-4.9 5.5-8.6 10.69995-8.6 3.7 0 6.9 1.8 8.9 4.5l-1.5 1.3c-1.7-2.3-4.4-3.8-7.4-3.8-3.9 0-7.29995 2.5-8.49995 6l11.49995 11.5c2.9-1 5.1-3.5 5.8-6.5h-4.8z' fill='%23fff'/%3E%3Cpath d='m6.2 21.7001c-2.1-2.1-3.2-4.8-3.2-7.6l10.8 10.8c-2.7 0-5.5-1.1-7.6-3.2z' fill='%23fff'/%3E%3Cpath d='m14 0c-7.7 0-14 6.3-14 14s6.3 14 14 14 14-6.3 14-14-6.3-14-14-14zm-7.8 21.8c-2.1-2.1-3.2-4.9-3.2-7.6l10.9 10.8c-2.8-.1-5.6-1.1-7.7-3.2zm10.2 2.9-13.1-13.1c1.1-4.9 5.5-8.6 10.7-8.6 3.7 0 6.9 1.8 8.9 4.5l-1.5 1.3c-1.7-2.3-4.4-3.8-7.4-3.8-3.9 0-7.2 2.5-8.5 6l11.5 11.5c2.9-1 5.1-3.5 5.8-6.5h-4.8v-2h7c0 5.2-3.7 9.6-8.6 10.7z' fill='%237026b9'/%3E%3C/g%3E%3C/svg%3E\"*/}\n                {/*/>*/}\n                  <div>\n                      <Link\n                          to=\"/blog\"\n                          className={\"main_a mainColor\"}\n                          style={{\n                              fontSize: `var(--font-sm)`,\n                              textDecoration: `none`,\n                          }}\n                      >\n                          Blog\n                      </Link>\n                      &nbsp;&nbsp;\n                      <Link\n                          to=\"/about\"\n                          className={\"main_a mainColor\"}\n                          style={{\n                              fontSize: `var(--font-sm)`,\n                              textDecoration: `none`,\n                          }}\n                      >\n                          About\n                      </Link>\n                      &nbsp;&nbsp;\n                      <button className=\"dark-switcher\" onClick={theme.toggleDark}>\n                          {theme.dark ? <b>☀</b> : <b>☾</b>}\n                      </button>\n                  </div>\n              </header>\n            </div>\n        )}\n    </ThemeContext.Consumer>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"../styles/layout.css\"\nimport ThemeContext from \"../context/ThemeContext\";\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <ThemeContext.Consumer>\n        {theme => (\n          <div className={theme.dark ? 'dark' : 'light'}>\n              <Header siteTitle={data.site.siteMetadata?.title} />\n              <div\n                style={{\n                  margin: `0 auto`,\n                  maxWidth: `var(--size-content)`,\n                  padding: `var(--size-gutter)`,\n                }}\n              >\n                <main>{children}</main>\n                <footer\n                  style={{\n                    marginTop: \"100px\",\n                    fontSize: `var(--font-sm)`,\n                    color:\"var(--color-secondary)\"\n                  }}\n                >\n                  © 2022 by {data.site.siteMetadata?.title}\n                </footer>\n              </div>\n          </div>\n        )}\n    </ThemeContext.Consumer>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","description","undefined","children","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","siteTitle","ThemeContext","theme","style","margin","padding","display","alignItems","justifyContent","className","fontSize","textDecoration","fontWeight","textDecorationLine","onClick","toggleDark","dark","useStaticQuery","siteMetadata","maxWidth","marginTop","color","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}