{"version":3,"file":"component---src-templates-post-template-tsx-5fc785228599a9731637.js","mappings":"6JAiDA,IAlCYA,IAAiD,IAADC,EAAAC,EAAA,IAA/C,YAAEC,EAAW,MAAEC,EAAK,SAAEC,GAAoBL,EACrD,MAAM,KAAEM,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApBT,EAAGK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBG,MAExC,OACEO,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQD,EAAkBN,EAAK,MAAMM,EAAiBN,GACtDO,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASL,IAClCG,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAAST,IACnCO,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASL,IACzCG,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAAQ,YACjCF,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,YAClCF,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,SAA0B,QAAjBX,EAAAI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBa,SAAU,KACnEJ,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAAST,IACpCO,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASL,IACzCH,EACA,C,mGCjBP,MAqCaW,EAAOC,IAA6B,IAA5B,KAAEC,GAAqBD,EAC1C,MAAM,MAAEb,GAAUc,EAAKC,eAAeC,YACtC,OAAOT,EAAAA,cAACU,EAAAA,EAAG,CAACjB,MAAOA,GAAS,EAG9B,UA1CqBJ,IAAuC,IAAtC,KAAEsB,EAAI,KAAEJ,GAAyBlB,EACrD,MAAMuB,EAAOL,EAAKC,eAElB,OACER,EAAAA,cAAA,WACEA,EAAAA,cAAA,MAAIa,UAAU,aAAY,QAG1Bb,EAAAA,cAAA,WACEA,EAAAA,cAAA,MAAIa,UAAU,QAAQC,MAAO,CAAEC,WAAY,UAAWC,UAAW,SAAWJ,EAAKH,YAAYhB,OAC7FO,EAAAA,cAAA,OAAKiB,wBAAyB,CAAEC,OAAQN,EAAKO,SAE/CnB,EAAAA,cAACoB,EAAAA,KAAI,CACHC,GAAG,QACHR,UAAU,mBACVC,MAAO,CACLQ,SAAU,iBACVC,eAAgB,SAGlBvB,EAAAA,cAAA,SAAG,4BAED,C","sources":["webpack://gatsby-starter-default/./src/components/seo.tsx","webpack://gatsby-starter-default/./src/templates/postTemplate.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ntype SeoType = {\n  description?: string;\n  title: string;\n  children?: React.ReactNode;\n}\n\nconst Seo = ({ description, title, children } : SeoType) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n};\n\nexport default Seo;\n","/*\nimport '@src/styles/blog-templates.css';\n*/\n\nimport * as React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Seo from '@src/components/seo';\nimport '@src/styles/blog-templates.css';\n\ntype PostTemplateFrontmatterType = {\n  title : string;\n}\n\ntype PostTemplateMarkdownRemarkType = {\n  frontmatter: PostTemplateFrontmatterType;\n  html: string;\n}\n\ntype PostTemplateDataType = {\n  markdownRemark : PostTemplateMarkdownRemarkType\n}\n\ntype PostTemplateType = {\n  path : string;\n  data : PostTemplateDataType;\n}\n\n// eslint-disable-next-line no-unused-vars\nconst postTemplate = ({ path, data } : PostTemplateType) => {\n  const blog = data.markdownRemark;\n\n  return (\n    <div>\n      <h2 className=\"mainColor\">\n        Blog\n      </h2>\n      <div>\n        <h1 className=\"mgl30\" style={{ fontWeight: 'lighter', marginTop: '30px' }}>{blog.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: blog.html }} />\n      </div>\n      <Link\n        to=\"/blog\"\n        className=\"main_a mainColor\"\n        style={{\n          fontSize: 'var(--font-sm)',\n          textDecoration: 'none',\n        }}\n      >\n        <b>âž¯ to list of blog posts</b>\n      </Link>\n    </div>\n  );\n};\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n\nexport const Head = ({ data }: { data: any }) => {\n  const { title } = data.markdownRemark.frontmatter;\n  return <Seo title={title} />;\n};\n\nexport default postTemplate;\n"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","author","Head","_ref2","data","markdownRemark","frontmatter","Seo","path","blog","className","style","fontWeight","marginTop","dangerouslySetInnerHTML","__html","html","Link","to","fontSize","textDecoration"],"sourceRoot":""}