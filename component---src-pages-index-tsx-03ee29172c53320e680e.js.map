{"version":3,"file":"component---src-pages-index-tsx-03ee29172c53320e680e.js","mappings":"6JAiDA,IAlCYA,IAAiD,IAADC,EAAAC,EAAA,IAA/C,YAAEC,EAAW,MAAEC,EAAK,SAAEC,GAAoBL,EACrD,MAAM,KAAEM,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApBT,EAAGK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBG,MAExC,OACEO,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQD,EAAkBN,EAAK,MAAMM,EAAiBN,GACtDO,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASL,IAClCG,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAAST,IACnCO,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASL,IACzCG,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAAQ,YACjCF,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,YAClCF,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,SAA0B,QAAjBX,EAAAI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBa,SAAU,KACnEJ,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAAST,IACpCO,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASL,IACzCH,EACA,C,yFCxCP,MAkBaW,EAAOA,IAAML,EAAAA,cAACM,EAAAA,EAAG,CAACb,MAAM,SAErC,UApBkBc,IAChBP,EAAAA,cAAA,WACEA,EAAAA,cAAA,MAAIQ,UAAU,aAAY,QAG1BR,EAAAA,cAAA,OAAKQ,UAAU,cACbR,EAAAA,cAAA,WACAA,EAAAA,cAAA,WACAA,EAAAA,cAAA,UAAI,0BACJA,EAAAA,cAAA,WACAA,EAAAA,cAAA,SAAG,uBACHA,EAAAA,cAAA,WACAA,EAAAA,cAAA,WACAA,EAAAA,cAAA,Y","sources":["webpack://gatsby-starter-default/./src/components/seo.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ntype SeoType = {\n  description?: string;\n  title: string;\n  children?: React.ReactNode;\n}\n\nconst Seo = ({ description, title, children } : SeoType) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n};\n\nexport default Seo;\n","import * as React from 'react';\nimport Seo from '@src/components/seo';\nimport '@src/styles/common.css';\nimport '@src/styles/index.css';\n\nconst IndexPage = () => (\n  <div>\n    <h2 className=\"mainColor\">\n      Home\n    </h2>\n    <div className=\"textCenter\">\n      <br />\n      <br />\n      <h3>Jun's 블로그에 오신것을 환영합니다!</h3>\n      <br />\n      <b>현재 Home은 개발중에 있습니다.</b>\n      <br />\n      <br />\n      <br />\n    </div>\n  </div>\n);\n\nexport const Head = () => <Seo title=\"Home\" />;\n\nexport default IndexPage;\n"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","author","Head","Seo","IndexPage","className"],"sourceRoot":""}