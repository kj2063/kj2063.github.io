{"version":3,"file":"component---src-pages-index-tsx-03ee29172c53320e680e.js","mappings":"6JAiDA,IAlCYA,IAAiD,IAADC,EAAAC,EAAA,IAA/C,YAAEC,EAAW,MAAEC,EAAK,SAAEC,GAAoBL,EACrD,MAAM,KAAEM,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApBT,EAAGK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBG,MAExC,OACEO,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQD,EAAkBN,EAAK,MAAMM,EAAiBN,GACtDO,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASL,IAClCG,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAAST,IACnCO,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASL,IACzCG,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAAQ,YACjCF,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,YAClCF,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,SAA0B,QAAjBX,EAAAI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBa,SAAM,KAC/DJ,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAAST,IACpCO,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASL,IACzCH,EACA,C,yFCxCP,MAmBaW,EAAOA,IAAML,EAAAA,cAACM,EAAAA,EAAG,CAACb,MAAM,SAErC,UArBkBc,IAIVP,EAAAA,cAAA,WACEA,EAAAA,cAAA,MAAIQ,UAAW,aAAa,QAG1BR,EAAAA,cAAA,OAAKQ,UAAW,cACZR,EAAAA,cAAA,WAAKA,EAAAA,cAAA,WACLA,EAAAA,cAAA,UAAI,0BACJA,EAAAA,cAAA,WACAA,EAAAA,cAAA,SAAG,uBAAuBA,EAAAA,cAAA,WAC1BA,EAAAA,cAAA,WAAKA,EAAAA,cAAA,Y","sources":["webpack://gatsby-starter-default/./src/components/seo.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\nimport React from \"react\";\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\ntype SeoType = {\r\n  description?: string;\r\n  title: string;\r\n  children?: React.Component;\r\n}\r\n\r\nconst Seo = ({ description, title, children } : SeoType) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport Seo from \"@src/components/seo\";\r\nimport \"@src/styles/index.css\"\r\nimport \"@src/styles/common.css\"\r\n\r\nconst IndexPage = () => {\r\n\r\n\r\n    return(\r\n        <div>\r\n          <h2 className={\"mainColor\"}>\r\n           Home\r\n          </h2>\r\n            <div className={\"textCenter\"}>\r\n                <br/><br/>\r\n                <h3>Jun's 블로그에 오신것을 환영합니다!</h3>\r\n                <br/>\r\n                <b>현재 Home은 개발중에 있습니다.</b><br/>\r\n                <br/><br/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"Home\" />\r\n\r\nexport default IndexPage\r\n"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","author","Head","Seo","IndexPage","className"],"sourceRoot":""}