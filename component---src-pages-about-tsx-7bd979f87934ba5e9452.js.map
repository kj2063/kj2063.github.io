{"version":3,"file":"component---src-pages-about-tsx-7bd979f87934ba5e9452.js","mappings":"6JAiDA,IAlCYA,IAAiD,IAADC,EAAAC,EAAA,IAA/C,YAAEC,EAAW,MAAEC,EAAK,SAAEC,GAAoBL,EACrD,MAAM,KAAEM,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApBT,EAAGK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBG,MAExC,OACEO,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQD,EAAkBN,EAAK,MAAMM,EAAiBN,GACtDO,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASL,IAClCG,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAAST,IACnCO,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASL,IACzCG,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAAQ,YACjCF,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,YAClCF,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,SAA0B,QAAjBX,EAAAI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBa,SAAU,KACnEJ,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAAST,IACpCO,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASL,IACzCH,EACA,C,+/BCrCP,MAiDaW,EAAOA,IAAML,EAAAA,cAACM,EAAAA,EAAG,CAACb,MAAM,UAErC,MAnDyBc,IACvBP,EAAAA,cAAA,WACEA,EAAAA,cAAA,MAAIQ,UAAU,aAAY,SAG1BR,EAAAA,cAAA,OAAKQ,UAAU,cACbR,EAAAA,cAACS,EAAAA,EAAW,CACVC,IAAI,+BACJC,QAAQ,QACRC,MAAO,IACPC,QAAS,GACTC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,GAAEC,YAAAC,EAAA,QAERjB,EAAAA,cAAA,OAAKQ,UAAU,oBAAmB,2BAEhCR,EAAAA,cAAA,WAAM,gHAGNA,EAAAA,cAAA,WAAM,0CAIVA,EAAAA,cAAA,OAAKQ,UAAU,aACbR,EAAAA,cAAA,UAAI,cACJA,EAAAA,cAAA,WACGkB,EAAWC,KAAI,CAACC,EAAMC,KACrB,MAAMC,EAAeF,EAAKG,OAAOJ,KAAI,CAACK,EAAYC,IAAczB,EAAAA,cAAA,MAAI0B,MAAM,MAAMC,IAAQN,EAAG,IAAII,GAAcD,KAC7G,OACExB,EAAAA,cAAA,OAAKQ,UAAU,4BAA4BmB,IAAG,UAAYN,GACxDrB,EAAAA,cAAA,OAAKQ,UAAU,2BAA2BmB,IAAG,iBAAmBN,GAC7DD,EAAKQ,QAER5B,EAAAA,cAAA,OAAKQ,UAAU,kBAAkBmB,IAAG,iBAAmBN,GACrDrB,EAAAA,cAAA,KAAG2B,IAAG,uBAAyBN,GAC5BD,EAAK3B,OAERO,EAAAA,cAAA,MAAI2B,IAAG,0BAA4BN,GAChCC,IAGD,M","sources":["webpack://gatsby-starter-default/./src/components/seo.tsx","webpack://gatsby-starter-default/./src/pages/about.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ntype SeoType = {\n  description?: string;\n  title: string;\n  children?: React.ReactNode;\n}\n\nconst Seo = ({ description, title, children } : SeoType) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n};\n\nexport default Seo;\n","import * as React from 'react';\nimport { StaticImage } from 'gatsby-plugin-image';\nimport careerData from '@src/data/career.json';\nimport { ReactNode } from 'react';\nimport Seo from '@src/components/seo';\nimport '@src/styles/common.css';\nimport '@src/styles/about.css';\n\nconst about : React.FC = () => (\n  <div>\n    <h2 className=\"mainColor\">\n      About\n    </h2>\n    <div className=\"textCenter\">\n      <StaticImage\n        src=\"../images/jun_circle_img.png\"\n        loading=\"eager\"\n        width={200}\n        quality={60}\n        formats={['auto', 'webp', 'avif']}\n        alt=\"\"\n      />\n      <div className=\"introductionText\">\n        안녕하세요. 소프트웨어 엔지니어 권준입니다.\n        <br />\n        저는 배우고 성장하는 과정에서 즐거움을 느끼고, 저와 비슷한 사람들과의 협업을 통해 함께 성장해 나가고 싶습니다.\n        &nbsp;나아가, 이러한 경험들이 더 나은 세상을 만드는 데 기여할 수 있기를 바랍니다.\n        <br />\n        이곳을 찾아주신 모든 분과 좋은 인연이 있기를 바라며, 감사합니다.\n      </div>\n    </div>\n    <div className=\"careerDiv\">\n      <h2>Experience</h2>\n      <div>\n        {careerData.map((data, idx) => {\n          const detailRender = data.detail.map((detailData, detailIdx) => <li color=\"red\" key={`${idx}-${detailIdx}`}>{detailData}</li>);\n          return (\n            <div className=\"careerContentsDiv flexBox\" key={`career_${idx}`}>\n              <div className=\"careerPeriodDiv flexItem\" key={`career_period_${idx}`}>\n                {data.period}\n              </div>\n              <div className=\"careerDetailDiv\" key={`career_detail_${idx}`}>\n                <p key={`career_detail_title_${idx}`}>\n                  {data.title}\n                </p>\n                <ul key={`career_detail_contents_${idx}`}>\n                  {detailRender as ReactNode}\n                </ul>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  </div>\n);\n\nexport const Head = () => <Seo title=\"About\" />;\n\nexport default about;\n"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","author","Head","Seo","about","className","StaticImage","src","loading","width","quality","formats","alt","__imageData","require","careerData","map","data","idx","detailRender","detail","detailData","detailIdx","color","key","period"],"sourceRoot":""}